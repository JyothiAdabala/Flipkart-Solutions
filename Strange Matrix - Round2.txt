Strange Matrix

A[][] is a (R x C) boolean matrix  such that each of its element is either 0 or 1. Each row of the matrix is sorted. Find the index of the row which has the maximum number of ones. If there are multiple such rows then return the smallest index.
An array B[] of size R is used to construct matrix A such that B[i] denotes the number of zeroes in the ith row.

Example 1: 

Input:
R=3, C=3
B[]={1, 0, 2} 

Output: 1

Explanation:
A[][] =[[0,1,1],
        [1,1,1],
        [0,0,1]]
Row with index 1 has maximum number of 1s. 

Solution:

class Solution{
    private A a;
    Solution(A a){
        this.a=a;
    }
    // do not edit this function
    // use it to get the value of A[i][j]
    int get(int i,int j){
      return a.get(i,j); 
    }
    public int solve(int R,int C){
        int j = -1;
        int rw = 0;
        for(int i=0;i<C;i++){
            if(self.get(0,i) == 1){
                j = i;
                break;
            }
        }
        if(j == -1)
            j = C-1;
        for(int i=0;i<R;i++){
            while(j >= 0 && self.get(i,j) == 1){
                j-=1;
                rw = i;
            }
        }
        return rw;
            
    }
};